{"version":3,"sources":["components/Form/Form.module.css","components/Header/Header.js","components/Form/Form.js","components/Contacts/ContactsItem.js","components/Contacts/Contacts.js","App.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Header","name","INITIAL_STATE","number","Form","state","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","css","set","legend","onChange","type","pattern","title","required","Component","ContactsItem","deleteContact","item","onClick","btn","Contacts","contactList","list","map","contact","id","contacts","filter","App","onFormSubmit","data","addContact","newContact","nanoid","verifyContact","alert","prevState","some","filterContact","normFilter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,OAAS,qBAAqB,IAAM,oB,0KCGvCC,EAJA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OAAO,6BAAKA,K,iBCKRC,EAAgB,CACpBD,KAAM,GACNE,OAAQ,IAGJC,E,4MAKJC,M,eAAaH,G,EAEbI,kBAAoB,SAAAC,GAClB,MAAwBA,EAAEC,cAAlBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBT,EAAOQ,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKT,OACzB,EAAKU,S,EAGPA,MAAQ,WACN,EAAKL,SAAL,eAAmBR,K,4CAGrB,WACE,MAAyBc,KAAKX,MAAtBJ,EAAR,EAAQA,KAAME,EAAd,EAAcA,OAEd,OACE,sBAAMW,SAAUE,KAAKL,aAArB,SACE,2BAAUM,UAAWC,IAAIC,IAAKlB,KAAK,OAAnC,UACE,wBAAQgB,UAAWC,IAAIE,OAAvB,yBACA,0CACO,uBACL,uBACEC,SAAUL,KAAKV,kBACfgB,KAAK,OACLrB,KAAK,OACLQ,MAAOR,EACPsB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,IAEV,0BAEF,uBAEA,2CAEE,uBACA,uBACEJ,SAAUL,KAAKV,kBACfgB,KAAK,MACLrB,KAAK,SACLQ,MAAON,EACPoB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,OAGZ,uBACA,uBAEA,uBAAOH,KAAK,SAASb,MAAM,yB,GA7DlBiB,aAoEJtB,I,gBCxDAuB,EAnBM,SAAC,GAAqC,IAAnC1B,EAAkC,EAAlCA,KAAME,EAA4B,EAA5BA,OAAQyB,EAAoB,EAApBA,cACpC,OACE,qBAAIX,UAAWC,IAAIW,KAAnB,UACE,wCACK5B,EADL,KACY,+BAAOE,OAEnB,wBAAQ2B,QAASF,EAAeN,KAAK,SAASL,UAAWC,IAAIa,IAA7D,wBCcSC,EAnBE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaL,EAAoB,EAApBA,cAC/B,OACE,mCACE,oBAAIX,UAAWC,IAAIgB,KAAnB,SACGD,EAAYE,KAAI,SAAAC,GACf,OACE,cAAC,EAAD,CAEEnC,KAAMmC,EAAQnC,KACdE,OAAQiC,EAAQjC,OAChByB,cAAe,kBAAMA,EAAcQ,EAAQC,MAHtCD,EAAQC,YCHrBnC,EAAgB,CACpBoC,SAAU,CACR,CAAED,GAAI,OAAQpC,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEkC,GAAI,OAAQpC,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEkC,GAAI,OAAQpC,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEkC,GAAI,OAAQpC,KAAM,iBAAkBE,OAAQ,cAEhDoC,OAAQ,IAGJC,E,4MACJnC,M,eAAaH,G,EAEbuC,aAAe,SAAAC,GACb,EAAKC,WAAWD,I,EAGlBpC,kBAAoB,SAAAC,GAClB,MAAwBA,EAAEC,cAAlBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBT,EAAOQ,K,EAG1BkC,WAAa,SAAAD,GACX,IAAME,EAAU,aACdP,GAAIQ,eACDH,GAGL,EAAKI,cAAcJ,GACfK,MAAM,GAAD,OAAIL,EAAKzC,KAAT,yBACL,EAAKS,UAAS,SAAAsC,GAAS,MAAK,CAC1BV,SAAS,GAAD,mBAAMU,EAAUV,UAAhB,CAA0BM,S,EAI1CE,cAAgB,SAAAJ,GAGd,OAFqB,EAAKrC,MAAlBiC,SAEQW,MAAK,SAAAb,GAAO,OAAIA,EAAQnC,OAASyC,EAAKzC,S,EAGxDiD,cAAgB,WACd,MAA6B,EAAK7C,MAA1BiC,EAAR,EAAQA,SACFa,EADN,EAAkBZ,OACQa,cAC1B,OAAOd,EAASC,QAAO,SAAAH,GAAO,OAAIA,EAAQnC,KAAKmD,cAAcC,SAASF,O,EAGxEvB,cAAgB,SAAAS,GACd,EAAK3B,UAAS,SAAAsC,GAAS,MAAK,CAC1BV,SAAUU,EAAUV,SAASC,QAAO,SAAAH,GAAO,OAAIA,EAAQC,KAAOA,U,4CAIlE,WACE,IAAQE,EAAWvB,KAAKX,MAAhBkC,OAER,OACE,qCACE,cAAC,EAAD,CAAQtC,KAAK,cACb,cAAC,EAAD,CAAMa,SAAUE,KAAKyB,eAErB,cAAC,EAAD,CAAQxC,KAAK,aACb,uDACA,uBAAOqB,KAAK,OAAOD,SAAUL,KAAKV,kBAAmBL,KAAK,SAASQ,MAAO8B,IAE1E,cAAC,EAAD,CAAUN,YAAajB,KAAKkC,gBAAiBtB,cAAeZ,KAAKY,uB,GAxDvDF,aA8DHc,IC5Efc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B5D,EAAOC,QAAU,CAAC,KAAO,uBAAuB,IAAM,sBAAsB,KAAO,0B","file":"static/js/main.f8049f05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"legend\":\"Form_legend__swJYv\",\"set\":\"Form_set__3_9Ti\"};","const Header = ({ name }) => {\r\n  return <h1>{name}</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { Component } from 'react';\r\n\r\nimport css from './Form.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass Form extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <fieldset className={css.set} name=\"Form\">\r\n          <legend className={css.legend}>Add contact</legend>\r\n          <label>\r\n            Name <br />\r\n            <input\r\n              onChange={this.handleInputChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n            />\r\n            <br />\r\n          </label>\r\n          <br />\r\n\r\n          <label>\r\n            Number\r\n            <br />\r\n            <input\r\n              onChange={this.handleInputChange}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n            />\r\n          </label>\r\n          <br />\r\n          <br />\r\n\r\n          <input type=\"submit\" value=\"Add contact\" />\r\n        </fieldset>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport css from './Contacts.module.css';\r\n\r\nconst ContactsItem = ({ name, number, deleteContact }) => {\r\n  return (\r\n    <li className={css.item}>\r\n      <p>\r\n        • {name}: <span>{number}</span>\r\n      </p>\r\n      <button onClick={deleteContact} type=\"button\" className={css.btn}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactsItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport ContactsItem from './ContactsItem';\r\nimport css from './Contacts.module.css';\r\n\r\nconst Contacts = ({ contactList, deleteContact }) => {\r\n  return (\r\n    <>\r\n      <ul className={css.list}>\r\n        {contactList.map(contact => {\r\n          return (\r\n            <ContactsItem\r\n              key={contact.id}\r\n              name={contact.name}\r\n              number={contact.number}\r\n              deleteContact={() => deleteContact(contact.id)}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n\r\nContacts.propTypes = {\r\n  contactList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport Header from './components/Header/Header';\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\n\n// import css from './App.module.css';\n\nconst INITIAL_STATE = {\n  contacts: [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  filter: '',\n};\n\nclass App extends Component {\n  state = { ...INITIAL_STATE };\n\n  onFormSubmit = data => {\n    this.addContact(data);\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  addContact = data => {\n    const newContact = {\n      id: nanoid(),\n      ...data,\n    };\n\n    this.verifyContact(data)\n      ? alert(`${data.name} already in contacts`)\n      : this.setState(prevState => ({\n          contacts: [...prevState.contacts, newContact],\n        }));\n  };\n\n  verifyContact = data => {\n    const { contacts } = this.state;\n\n    return contacts.some(contact => contact.name === data.name);\n  };\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n    const normFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normFilter));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <>\n        <Header name=\"Phonebook\" />\n        <Form onSubmit={this.onFormSubmit} />\n\n        <Header name=\"Contacts\" />\n        <p>Find contacts by name:</p>\n        <input type=\"text\" onChange={this.handleInputChange} name=\"filter\" value={filter} />\n\n        <Contacts contactList={this.filterContact()} deleteContact={this.deleteContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__3Uz2-\",\"btn\":\"Contacts_btn__1mUnx\",\"list\":\"Contacts_list__1qZfR\"};"],"sourceRoot":""}